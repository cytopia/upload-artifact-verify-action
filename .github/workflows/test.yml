---
name: test
on:
  pull_request:

jobs:
  test-normal:
    name: test-normal
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create artifact
        id: file
        shell: bash
        run: |
          PRE_RAND="$( ${RAND} | md5sum | head -c 20;  )"
          PRE_DATE="$( date '+%s' )"
          NAME="${PRE_RAND}-${PRE_DATE}.txt"
          echo "somedata" > "${NAME}"
          echo "::set-output name=path::${NAME}"

      - name: upload artifact
        uses: ./
        with:
          name: ${{ steps.file.outputs.path }}
          path: ${{ steps.file.outputs.path }}


  test-pre-post-command:
    name: test-pre-post-command
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create artifact
        id: file
        shell: bash
        run: |
          PRE_RAND="$( ${RAND} | md5sum | head -c 20;  )"
          PRE_DATE="$( date '+%s' )"
          NAME="${PRE_RAND}-${PRE_DATE}.txt"
          echo "somedata" > "${NAME}"
          echo "::set-output name=path::${NAME}"

      - name: upload artifact
        id: upload
        uses: ./
        with:
          name: ${{ steps.file.outputs.path }}
          path: ${{ steps.file.outputs.path }}
          post_command: |
            ls -lap {{download_path}}


  test-retry:
    runs-on: ubuntu-latest
    name: test-retry
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # TRY-1
      # export docker image to file
      # upload file
      # download file
      # import downloaded file into docker
      - name: upload docker image (try-1)
        id: upload-1
        uses: ./
        continue-on-error: true
        with:
          name: php-fpm-8.1-work
          path: php-fpm-8.1-work
          pre_command: |
            docker save devilbox/php-fpm:8.1-work | gzip
          post_command: |
            docker load -i {{download_path}}

      # TRY-2
      # export docker image to file
      # upload file
      # download file
      # import downloaded file into docker
      - name: upload docker image (try-2)
        id: upload-2
        uses: ./
        with:
          name: some-random-file
          path: some-random-file
          pre_command: |
            echo "some-contents" > some-random-file
          post_command: |
            cat {{download_path}}
        if: steps.upload-1.outcome == 'failure'
